{
	"info": {
		"_postman_id": "4bc70130-1d36-43ab-86a5-01cd64dba57a",
		"name": "Sudokuru-Backend",
		"description": "These tests will be used as functional tests and will be run againts localhost and in the Dev environment if we have one. Tests will likely not be run in Production.\n\nEach user has a maximum of **1000 API calls** per month, so when developing try to use the Postman app to minimize API call useage.\n\n**NOTE: These tests will automatically clear the database before each test.**",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_uid": "23651156-4bc70130-1d36-43ab-86a5-01cd64dba57a"
	},
	"item": [
		{
			"name": "1. Puzzle",
			"item": [
				{
					"name": "1.1 Post Requests",
					"item": [
						{
							"name": "Code 201",
							"item": [
								{
									"name": "1.1.1 POST_TWO_FULL_PUZZLES_RETURN_201",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "d6e897b5-f31e-4c7f-804f-868a4c3c0953",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "d36b5ff6-4e08-4901-80ca-15e91f2b0aa8",
												"exec": [
													"pm.test(\"JSON response is correct\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    puzzleTools.puzzleResponseChecker(jsonData, 0, \"310084002200150006570003010423708095760030000009562030050006070007000900000001500\", \"316984752298157346574623819423718695765439128189562437851396274637245981942871563\", 5, 8, 4, 0, 0, 10, 20, false, 0);\r",
													"\r",
													"    puzzleTools.puzzleResponseChecker(jsonData, 1, \"603002001500000020901730006810400090060000000000690040350000004002070005000500108\", \"683942751574816329921735486817453692469287513235691847358169274142378965796524138\", 5, 8, 4, 0, 0, 10, 20, false, 0);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"id": "9808f1b8-76b4-4b30-a09c-3acbb93191fe",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "[{\r\n    \"puzzle\": \"310084002200150006570003010423708095760030000009562030050006070007000900000001500\", \r\n    \"puzzleSolution\": \"316984752298157346574623819423718695765439128189562437851396274637245981942871563\", \r\n    \"strategyCount\": { \"stratOne\": 5, \"stratTwo\": 8, \"stratThree\": 4 },\r\n    \"fastestSolveTime\": 0, \r\n    \"averageSolveTime\": 0, \r\n    \"numUsersPlayed\": 10, \r\n    \"numTimesPlayed\": 20, \r\n    \"truleyUnique\": false \r\n}, {\r\n    \"puzzle\": \"603002001500000020901730006810400090060000000000690040350000004002070005000500108\", \r\n    \"puzzleSolution\": \"683942751574816329921735486817453692469287513235691847358169274142378965796524138\", \r\n    \"strategyCount\": { \"stratOne\": 5, \"stratTwo\": 8, \"stratThree\": 4 },\r\n    \"fastestSolveTime\": 0, \r\n    \"averageSolveTime\": 0, \r\n    \"numUsersPlayed\": 10, \r\n    \"numTimesPlayed\": 20, \r\n    \"truleyUnique\": false \r\n}]\r\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseurl}}/api/v1/puzzles/",
											"host": [
												"{{baseurl}}"
											],
											"path": [
												"api",
												"v1",
												"puzzles",
												""
											]
										}
									},
									"response": []
								},
								{
									"name": "1.1.2 POST_ONE_FULL_PUZZLE_RETURN_201",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "43b408ba-a3e9-4f9c-8809-740bdf7557f7",
												"exec": [
													"pm.test(\"JSON response is correct\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    puzzleTools.puzzleResponseChecker(jsonData, 0, \"310084002200150006570003010423708095760030000009562030050006070007000900000001500\", \"316984752298157346574623819423718695765439128189562437851396274637245981942871563\", 5, 8, 4, 0, 0, 10, 20, false, 0);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"id": "0d957abc-4252-443e-a61c-83dc2d1b3bda",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "[{\r\n    \"puzzle\": \"310084002200150006570003010423708095760030000009562030050006070007000900000001500\", \r\n    \"puzzleSolution\": \"316984752298157346574623819423718695765439128189562437851396274637245981942871563\", \r\n    \"strategyCount\": { \"stratOne\": 5, \"stratTwo\": 8, \"stratThree\": 4 },\r\n    \"fastestSolveTime\": 0, \r\n    \"averageSolveTime\": 0, \r\n    \"numUsersPlayed\": 10, \r\n    \"numTimesPlayed\": 20, \r\n    \"truleyUnique\": false \r\n}]\r\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseurl}}/api/v1/puzzles/",
											"host": [
												"{{baseurl}}"
											],
											"path": [
												"api",
												"v1",
												"puzzles",
												""
											]
										}
									},
									"response": []
								},
								{
									"name": "1.1.3 POST_ONE_MINIMAL_PUZZLE_RETURN_201",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "bcbc066b-52e1-4310-8a57-1d8eb7b0b527",
												"exec": [
													"pm.test(\"JSON response is correct\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    puzzleTools.puzzleResponseChecker(jsonData, 0, \"310084002200150006570003010423708095760030000009562030050006070007000900000001500\", \"316984752298157346574623819423718695765439128189562437851396274637245981942871563\", 5, 8, 4, 0, 0, 0, 0, false, 0);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"id": "a6ac7ed5-bb7c-42cf-a2a6-04122c4f6d0f",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "[{\r\n    \"puzzle\": \"310084002200150006570003010423708095760030000009562030050006070007000900000001500\", \r\n    \"puzzleSolution\": \"316984752298157346574623819423718695765439128189562437851396274637245981942871563\",  \r\n    \"strategyCount\": { \"stratOne\": 5, \"stratTwo\": 8, \"stratThree\": 4 }\r\n}]\r\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseurl}}/api/v1/puzzles/",
											"host": [
												"{{baseurl}}"
											],
											"path": [
												"api",
												"v1",
												"puzzles",
												""
											]
										}
									},
									"response": []
								},
								{
									"name": "1.1.4 POST_TWENTY_MINIMAL_PUZZLES_RETURN_201",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "28803204-3096-4387-9438-6b6a2baaa803",
												"exec": [
													"pm.test(\"JSON response is correct\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    puzzleTools.puzzleResponseChecker(jsonData, 0, \"310084002200150006570003010423708095760030000009562030050006070007000900000001500\", \"316984752298157346574623819423718695765439128189562437851396274637245981942871563\", 5, 8, 4, 0, 0, 0, 0, false, 0);\r",
													"\r",
													"    puzzleTools.puzzleResponseChecker(jsonData, 1, \"008645019010009700009702000040023870803097200100000093000004106000000930700306402\", \"278645319614839725539712648946523871853197264127468593382974156465281937791356482\", 5, 8, 4, 0, 0, 0, 0, false, 0);\r",
													"\r",
													"    puzzleTools.puzzleResponseChecker(jsonData, 2, \"000080009832709015049520370175600040000005080090007006080170090000350020200006500\", \"751483269832769415649521378175638942426915783398247156583172694967354821214896537\", 5, 8, 4, 0, 0, 0, 0, false, 0);\r",
													"\r",
													"    puzzleTools.puzzleResponseChecker(jsonData, 3, \"060004029400900006900160570610000082040000000302007600100050068009641700050302091\", \"861574329475923816923168574617435982548296137392817645134759268289641753756382491\", 5, 8, 4, 0, 0, 0, 0, false, 0);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"id": "d2ae68f4-0a93-4934-8718-6a33efb5594e",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "[{\r\n    \"puzzle\": \"310084002200150006570003010423708095760030000009562030050006070007000900000001500\", \r\n    \"puzzleSolution\": \"316984752298157346574623819423718695765439128189562437851396274637245981942871563\",  \r\n    \"strategyCount\": { \"stratOne\": 5, \"stratTwo\": 8, \"stratThree\": 4 }\r\n},{\r\n    \"puzzle\": \"008645019010009700009702000040023870803097200100000093000004106000000930700306402\",\r\n    \"puzzleSolution\": \"278645319614839725539712648946523871853197264127468593382974156465281937791356482\",  \r\n    \"strategyCount\": { \"stratOne\": 5, \"stratTwo\": 8, \"stratThree\": 4 }\r\n},{\r\n    \"puzzle\": \"000080009832709015049520370175600040000005080090007006080170090000350020200006500\", \r\n    \"puzzleSolution\": \"751483269832769415649521378175638942426915783398247156583172694967354821214896537\",  \r\n    \"strategyCount\": { \"stratOne\": 5, \"stratTwo\": 8, \"stratThree\": 4 }\r\n},{\r\n    \"puzzle\": \"060004029400900006900160570610000082040000000302007600100050068009641700050302091\", \r\n    \"puzzleSolution\": \"861574329475923816923168574617435982548296137392817645134759268289641753756382491\",  \r\n    \"strategyCount\": { \"stratOne\": 5, \"stratTwo\": 8, \"stratThree\": 4 }\r\n}]\r\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseurl}}/api/v1/puzzles/",
											"host": [
												"{{baseurl}}"
											],
											"path": [
												"api",
												"v1",
												"puzzles",
												""
											]
										}
									},
									"response": []
								}
							],
							"id": "8da06f93-f02e-49d8-8fa0-34b96d22181d",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "eb17cf4c-f50a-44e8-9464-27db2e605929",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "54b57d42-44d0-477e-8204-341927c38cfb",
										"type": "text/javascript",
										"exec": [
											"// Test to see if Status Code is 201",
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});"
										]
									}
								}
							]
						},
						{
							"name": "Code 400",
							"item": [],
							"id": "743d9b07-c901-4e4d-886e-ae7d96a66002"
						},
						{
							"name": "Code 500",
							"item": [],
							"id": "224e805a-2f45-4433-bed6-ae3c23ee7b08"
						}
					],
					"id": "de35ee88-768b-4ce7-930d-f05fc8ec85f7",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "a7112bbf-ac17-4b7e-9a5c-11088ff7ccef",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "c4fd4fbe-dbc6-4052-866a-8e750f9039d6",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "1.2 Get Requests",
					"item": [
						{
							"name": "Code 200",
							"item": [
								{
									"name": "1.2.1 GET_ALL_PUZZLES_RETURN_200",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "bcbb020f-38d3-4de4-827e-3fed727a7095",
												"exec": [
													"// Test to see if Status Code is 200\r",
													"// pm.test(\"Status code is 200\", function () {\r",
													"//     pm.response.to.have.status(200);\r",
													"// });"
												],
												"type": "text/javascript"
											}
										}
									],
									"id": "f5975a4f-4a40-4323-a66e-f647e4a2ed2a",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseurl}}/api/v1/puzzles/",
											"host": [
												"{{baseurl}}"
											],
											"path": [
												"api",
												"v1",
												"puzzles",
												""
											],
											"query": [
												{
													"key": "",
													"value": null,
													"type": "text",
													"disabled": true
												}
											]
										}
									},
									"response": []
								}
							],
							"id": "5daf0ed7-4e7b-4aaa-8ecb-a588c2e078e8"
						},
						{
							"name": "Code 400",
							"item": [],
							"id": "227feb3b-7875-4d52-8af1-d43c4f088b9a"
						},
						{
							"name": "Code 404",
							"item": [
								{
									"name": "1.2.1 GET_ALL_PUZZLES_RETURN_404",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "83823552-e693-4e9c-b7f9-00d65a95ce16",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "b79d09d8-610d-4b23-8b00-3ffbebfd7f04",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"id": "d91ea180-2980-4406-9cb0-c7c943fd8598",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseurl}}/api/v1/puzzles/",
											"host": [
												"{{baseurl}}"
											],
											"path": [
												"api",
												"v1",
												"puzzles",
												""
											]
										}
									},
									"response": []
								}
							],
							"id": "3123d837-5500-4113-afc1-aa73b04f6ecb",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "bd4e84db-20c7-4ce7-879a-e53aafa38bd1",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "62ace093-78a0-47ef-ad75-70b1437a3347",
										"type": "text/javascript",
										"exec": [
											"// Test to see if Status Code is 404",
											"pm.test(\"Status code is 404\", function () {",
											"    pm.response.to.have.status(404);",
											"});",
											"pm.test(\"Error response is correct\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.Error_Message).to.eql(\"Resource Not Found\");",
											"    pm.expect(jsonData.Status).to.eql(404);",
											"});"
										]
									}
								}
							]
						},
						{
							"name": "Code 500",
							"item": [],
							"id": "eb622737-3138-43e9-8b4e-db405f94668b"
						}
					],
					"id": "2b75ad6b-ceb0-4513-9d28-0ae9959f9255"
				},
				{
					"name": "1.3 Delete Requests",
					"item": [
						{
							"name": "1.3.1 DELETE_ALL_PUZZLES_RETURN_200",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "1fa9982f-909c-4fb6-9b33-b617498393c9",
										"exec": [
											"// Test to see if Status Code is 200\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "d81bff50-2bd6-4b7c-be23-ab739009b97b",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseurl}}/api/v1/puzzles/",
									"host": [
										"{{baseurl}}"
									],
									"path": [
										"api",
										"v1",
										"puzzles",
										""
									]
								}
							},
							"response": []
						}
					],
					"id": "f07cab2c-84e7-422b-8578-cbd6f7b0291f"
				}
			],
			"id": "b3717b0c-aa68-41cb-91e6-289147b33ed5",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "14727c8c-eeee-4b27-aad8-6e8b151dfb20",
						"type": "text/javascript",
						"exec": [
							"puzzleTools = {",
							"  puzzleResponseChecker: function(jsonData, vNum, vPuz, vSol, vStratOne, vStratTwo, vStratThree, vfast, vAver, vNumUsers, vNumTimes, vUnique, v__v) {",
							"    pm.expect(jsonData[vNum].puzzle).to.eql(vPuz);",
							"    pm.expect(jsonData[vNum].puzzleSolution).to.eql(vSol);",
							"    pm.expect(jsonData[vNum].strategyCount.stratOne).to.eql(vStratOne);",
							"    pm.expect(jsonData[vNum].strategyCount.stratTwo).to.eql(vStratTwo);",
							"    pm.expect(jsonData[vNum].strategyCount.stratThree).to.eql(vStratThree);",
							"    pm.expect(jsonData[vNum].fastestSolveTime).to.eql(vfast);",
							"    pm.expect(jsonData[vNum].averageSolveTime).to.eql(vAver);",
							"    pm.expect(jsonData[vNum].numUsersPlayed).to.eql(vNumUsers);",
							"    pm.expect(jsonData[vNum].numTimesPlayed).to.eql(vNumTimes);",
							"    pm.expect(jsonData[vNum].trulyUnique).to.eql(vUnique);",
							"    pm.expect(jsonData[vNum].__v).to.eql(v__v);",
							"  }",
							"};"
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "ebd2bf10-2adc-4d9e-a350-502b64425cf5",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "UserProfile",
			"item": [
				{
					"name": "Post Requests",
					"item": [
						{
							"name": "localhost-createProfile",
							"id": "da1242cd-d7f4-4ed3-8a30-0c14a2596cd9",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"userId\": \"Thomas3\",\r\n    \"userEmail\": \"email@email3.com\",\r\n    \"userName\": \"Darth3\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseurl}}/api/v1/user/profiles",
									"host": [
										"{{baseurl}}"
									],
									"path": [
										"api",
										"v1",
										"user",
										"profiles"
									]
								}
							},
							"response": []
						}
					],
					"id": "710815e9-4ac7-48c9-8caa-4f03a0993307"
				},
				{
					"name": "Delete Requests",
					"item": [
						{
							"name": "localhost-deleteAllProfiles",
							"id": "f59a78de-bd3c-4d88-84e7-52c4b0516fdd",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseurl}}/api/v1/user/profiles",
									"host": [
										"{{baseurl}}"
									],
									"path": [
										"api",
										"v1",
										"user",
										"profiles"
									]
								}
							},
							"response": []
						}
					],
					"id": "73c8c547-e450-4be5-9880-4de44c914daa"
				},
				{
					"name": "Get Requests",
					"item": [
						{
							"name": "localhost-getAllProfiles",
							"id": "61698200-97a9-41cf-b50e-783a21272ea8",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseurl}}/api/v1/user/profiles",
									"host": [
										"{{baseurl}}"
									],
									"path": [
										"api",
										"v1",
										"user",
										"profiles"
									]
								}
							},
							"response": []
						}
					],
					"id": "19b2a173-8fb0-4f4c-b4a4-5cc27fd4def1"
				}
			],
			"id": "a7e868e8-4ab2-4c9c-b293-ab98c16b4803"
		},
		{
			"name": "UserGameStatistics",
			"item": [],
			"id": "9100da66-a062-4674-96ed-46d0ea30993f"
		},
		{
			"name": "UserGameSearchFilters",
			"item": [],
			"id": "fb8eb93b-4955-41f3-bfe6-e4cbdcfb5a6f"
		},
		{
			"name": "UserInProgressGames",
			"item": [],
			"id": "de2b2023-9db7-4c79-a268-3434b897cbc7"
		},
		{
			"name": "UserGameHistory",
			"item": [],
			"id": "55c60a80-01a4-43d7-aecd-901655b2b01c"
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "2b7a23b3-a81f-4b8a-8bdb-3a91153f111b",
				"type": "text/javascript",
				"exec": [
					"// retrieve baseUrl",
					"var baseUrl = pm.environment.get('baseurl');",
					"",
					"// Script that deletes everything before request",
					"pm.sendRequest({",
					"    url: baseUrl + \"/api/v1/puzzles/\",",
					"    method: 'DELETE',",
					"}, function (err, res) {",
					"    console.log(res);",
					"});"
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "bdcd3e27-70e3-45c2-8748-a9c86c043a03",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	]
}